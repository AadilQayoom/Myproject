
import ContentContainer from "../../components/ui/content-container/content-container";

import { useState } from "react";
import classes from './joinedeventdiscription.module.less'
import React from "react";
import MainWrapper from "../../components/ui/wrapper/wrapper";
import { useTranslation } from "next-i18next";
import Head from "next/head";
import { useEffect } from "react";
import { AddEvent, GetSingleEvents } from "../../services/apis/apisHome";
import { useRouter } from "next/router";
import { useRecoilState } from "recoil";
import { selectedEventState } from "../../recoil/atoms/home";
import PopupMessage from "../../components/JoinMessage";
import { kuposModalErrorSuccessState } from "../../recoil/atoms/common";





const JoinedEventDiscription = (item) => {

    const [name, setName] = useState({ val: "", error: "" });
    const [email, setEmail] = useState({ val: "", error: "" });
    const [message, setMessage] = useState({ val: "", error: "" });
    const [buttonClicked, setButtonClicked] = useState(false)
    const { t } = useTranslation("common");
    const [popupMessage, setpopupMessage] = useState(false);
    const router = useRouter()
    let id = 1;
    console.log("router", router)


    //recoil states
    const [selectedEvent, setSelectedEvent] = useRecoilState(selectedEventState);
    const [modalErrorSuccess, setModalErrorSuccess] = useRecoilState(kuposModalErrorSuccessState)


    console.log({ selectedEvent })

    //api call


    useEffect(() => {

        GetSingleEvents(`posts/10`)({
            callback: res => {
                console.log("respo from single itemapi---", res)

                if (res) {
                    //   setEvents(Object.values(res).slice(0, 99))
                }
            }
        })


    }, [])


    const join = (status) => {
        setModalErrorSuccess({ showModal: true, success: status, modalTitle: "You have successfully joined the event!", })
    }


    const gotoCertificate=() =>{
        router.push('/generatecertificate');
      }

      
       


    return (
        <MainWrapper t={t}>
            <div className={classes.container}>
                <Head>
                    <title>cumputer-club</title>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="icon" href="/favicon.ico" />
                    <link
                        rel="stylesheet"
                        href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
                        integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"
                        crossOrigin="anonymous"
                    />
                </Head>
                <ContentContainer>


                    <div className={classes.event_description_main}>
                        <div></div>
                        <div className={classes.main_heading}>
                            <span className={classes.event_line}></span>
                            <span className={classes.event_heading}>Joined Event Details</span>
                            <span className={classes.event_line}></span>
                        </div>
                        {/* <div className={classes.event_description_banner}><img src="/images/iustimages/image4.jpg" /></div> */}

                        <div className={classes.event_description_heading}>
                            <div className={classes.event_description_content}>
                                <div className={classes.event_content1}>
                                    <span className={classes.event_name}>Title : </span>
                                    <span className={classes.event_name_con}> {selectedEvent.title || "Quantum computing"} </span>{item.name}</div>

                                <div className={classes.event_content}>
                                    <div className={classes.event_details}>
                                        <span className={classes.clock_icons}><img src="/images/iustimages/clock.jpg" /></span>
                                        <span>Start time : </span>
                                        <span className={classes.start_clock}> {selectedEvent.starttime || "12am"}</span>
                                    </div>
                                    <div className={classes.event_details}>
                                        <span className={classes.clock_icons}><img src="/images/iustimages/clock.jpg" /></span>
                                        <span>End time : {selectedEvent.end}</span>
                                        <span className={classes.start_clock}> {selectedEvent.endtime || "2pm"}</span>
                                    </div>
                                </div>


                            </div>
                            <div className={classes.event_description_contentsecond}>
                                <div className={classes.event_description_motivation_image}> <img src="/images/iustimages/image5.jpg" /></div>
                                <div className={classes.event_registration}>
                                    <div className={classes.event_content}>
                                        <div className={classes.start_registration}>
                                            Start registration :
                                            <span className={classes.start_time}>{selectedEvent.startregistration || " 2023-7-23"}</span>
                                        </div>
                                        <div className={classes.start_registration}>End registration :
                                            <span className={classes.start_time}>{selectedEvent.endregistration || " 2023-8-1"}</span></div>
                                    </div>
                                    <div className={classes.event_content_cordinator}>Date of commencement :

                                        <span className={classes.start_time}> {selectedEvent.commencement || "  2023-7-23"}</span>
                                    </div>
                                    <div className={classes.event_content_cordinator}>Seats available :

                                        <span className={classes.start_time}> {selectedEvent.seatavailable || "  6"} </span>
                                    </div>

                                    <div className={classes.event_content_cordinator}>Cordinator :
                                        <span className={classes.start_time}>{selectedEvent.cordinator || "  Dr Syed Tanzeel"}</span>
                                    </div>
                                    <div className={classes.event_content_cordinator}>Awards :
                                        <span className={classes.start_time}>{selectedEvent.awards || "  ten thousand"}</span>
                                    </div>
                                    <div className={classes.event_content_cordinator}>Venue :

                                        <span className={classes.start_time}> {selectedEvent.Venue || "  Mehjoor Auditorium"}</span>
                                    </div>
                                    <div className={classes.event_content_cordinator}>Entry Fee :

                                        <span className={classes.start_time}>{selectedEvent.EntryFee || "  100"}</span>
                                    </div>
                                    <div className={classes.event_content_cordinator}>Status :

                                        <span className={classes.start_time}> {selectedEvent.status || "complete/ incomplete"} </span>
                                    </div>
                                    <div className={classes.event_content_cordinator}>Mode :  

                                        <span className={classes.start_time}>{selectedEvent.mode || "  Online / Offline"} </span>
                                    </div>
                                    <div className={classes.event_content_cordinator}>Track Performance :

                                        <span className={classes.start_time}>{selectedEvent.Trackperformance || "  abc"} </span>
                                    </div>
                                    <div className={classes.event_button} onClick={gotoCertificate} >Generate Certificate</div>

                                    {/* <PopupMessage /> */}
                                    {popupMessage ? (
                                        <div className={classes.popup_main}>
                                            <div className={classes.popup_message}>You have sucessfully joined</div>
                                        </div>
                                    ) : null}

                                </div>
                            </div>
                        </div>

                    </div>


                </ContentContainer>
            </div>
        </MainWrapper>
    );
};

// export const getStaticProps = async ({ locale }) => ({
//   props: {
//     ...(await serverSideTranslations(locale ?? "es", ["common"])),
//   },
// });

// export const getStaticPaths = async () => {
//   return {
//       paths: [], //indicates that no page needs be created at build time
//       fallback: "blocking", //indicates the type of fallback
//   };
// };

export default JoinedEventDiscription;
